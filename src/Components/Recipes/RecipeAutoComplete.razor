@inherits RemindMealComponent
@inject IAsyncRepository<Recipe> Repository

<MudAutocomplete
            T=RecipeView
            Label="SÃ©lectionner une recette"
            ToStringFunc="@(v => v.Name)"
            @bind-Value=view
            SearchFunc=Search
            ResetValueOnEmptyText=true
            CoerceText=false
            CoerceValue=false />

@code
{
    private RecipeView view { 
        get => View;
        set
        {
            View = value;
            Task.Run(async () => await ViewChanged.InvokeAsync(value));
        }
    }

    [Parameter]
    public RecipeView View { get; set; }

    [Parameter]
    public EventCallback<RecipeView> ViewChanged { get; set; }

    private List<RecipeView> views;

    protected async override Task OnInitializedAsync()
    {
        var recipes = await Repository.GetListAsync();
        views = recipes.Select(r => new RecipeView { Name = r.Name }).ToList();
        await base.OnInitializedAsync();
    }
    
    private Task<IEnumerable<RecipeView>> Search(string value)
    {
        // if text is null or empty, show complete list
        return Task.FromResult(
            string.IsNullOrEmpty(value)
                ? views
                : views.Where(c => c.Name.Contains(value, StringComparison.InvariantCultureIgnoreCase))
            );
    }
}