@inject IAsyncRepository<Recipe> RecipeRepository
@inject IAsyncRepository<Meal> MealRepository

<AddFormDialog TModel=MealView OnValidated=OnValidated>
    <Fields Context=meal>
        <MudDatePicker Label="Date" @bind-Date="meal.Date" />
        @for (var i = 0; i < selectedRecipes.Count; ++i)
        {
            var local = i;
            <RecipeAutoComplete @bind-Recipe=selectedRecipes[local] />
        }
        <MudButton OnClick="Add">Ajouter un plat</MudButton>
    </Fields>
</AddFormDialog>

@code
{
    private List<Recipe> selectedRecipes = new List<Recipe>() { new Recipe() };
    private List<Recipe> allRecipes;

    protected async override Task OnInitializedAsync()
    {
        allRecipes = await RecipeRepository.GetListAsync();
        await base.OnInitializedAsync();
    }

    private async Task OnValidated(MealView mealView)
    {
        var meal = new Meal() { Date = (DateTime) mealView.Date };
        foreach (var dish in mealView.Dishes)
            meal.Dishes.Add(dish);
        foreach (var presence in mealView.Presences)
            meal.Presences.Add(presence);
        var insertedMeal = await MealRepository.InsertAsync(meal);
    }

    private void Add()
    {
        selectedRecipes.Add(new Recipe());
    }
}