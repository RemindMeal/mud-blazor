@page "/recipes"

<MudTable Items=Recipes Hover=true Loading=!loaded Border=true Filter=FilterFunc Class="ma-5">
    <ToolBarContent>
        <MudText Typo="Typo.h6">
            Recipes List
        </MudText>
        <MudSpacer />
        <MudTextField
            @bind-Value="searchString"
            Placeholder="Search"
            Adornment="Adornment.Start"
            AdornmentIcon="@Icons.Material.Filled.Search"
            IconSize="Size.Medium"
            Class="mt-0">
        </MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>
            <MudTableSortLabel
                InitialDirection="SortDirection.Ascending"
                SortBy="new Func<Recipe, object>(x => x.Name)">
                Nom
            </MudTableSortLabel>
        </MudTh>
        <MudTh>
            <MudTableSortLabel
                InitialDirection="SortDirection.Ascending"
                SortBy="new Func<Recipe, object>(x => x.Description)">
                Description
            </MudTableSortLabel>
        </MudTh>
    </HeaderContent>
    <RowTemplate Context="recipe">
        <MudTd>@recipe.Name</MudTd>
        <MudTd>@recipe.Description</MudTd>
    </RowTemplate>
</MudTable>

<MudGrid Class="ma-5">
    @foreach (var recipe in Recipes)
    {
        <MudItem>
            <RecipeCard recipe=recipe />
        </MudItem>   
    }
</MudGrid>

@code
{
    private bool loaded = false;

    private List<Recipe> Recipes = new List<Recipe>();

    private string searchString = "";

    private bool FilterFunc(Recipe recipe)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (recipe.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (recipe.Description.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        Recipes.Add(new Recipe("Saumon", "Tr√®s bon saumon"));
        StateHasChanged();
        await Task.Delay(500);
        Recipes.Add(new Recipe("Poulet au curry", "avec du sel"));
        StateHasChanged();
        await Task.Delay(500);
        loaded = true;
    }
}